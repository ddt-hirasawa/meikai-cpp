/*
演習6-20 多重定義 2つ 3 つの値から最小値を返却する関数群の作成する

作成日 2017年5月7日

作成者 平澤敬介
*/

#include<iostream>

using namespace std;

// 2つの値から最小値を返却する関数の宣言
int min(int,int);
// 3つの値から最小値を返却する関数の宣言
int min(int,int,int);

int main()
{
	int nIntx,nInty,nIntz;// 変数の宣言 最小値を返却するための変数 値はキーボードから読み込み

	// 変数に値を代入する部分 整数ならばかまわず入力してかまわない
	cout << "nIntx の値 : ";

	//キーボードからの値を代入する 整数なら構わない
	cin >> nIntx;

	// 変数に値を代入する部分 整数ならばかまわず入力してかまわない
	cout << "nInty の値 : ";

	//キーボードからの値を代入する 整数なら構わない
	cin >> nInty;

	// 変数に値を代入する部分 整数ならばかまわず入力してかまわない
	cout << "nIntz の値 : ";

	//キーボードからの値を代入する 整数なら構わない
	cin >> nIntz;

	//関数呼び出し部分 関数名が おなじ min だが 引数で判別されている
	cout << "nIntx と nInty の最小値は " << min(nIntx,nInty) << "です。\n";

	//関数呼び出し部分 関数名が おなじ min だが 引数で判別されている
	cout << "nIntx , nInty , nIntz の最小値は " << min(nIntx,nInty,nIntz) << "です。\n";

	return 0;
}

//関数 2つの値から最小値を返却する関数
//仮引数 整数 x y どちらが小さくても構わない
//返却値 比較して小さい値

int min(int x,int y)
{
	// 条件演算子による返却 3つの値の場合 違う処理をしているため
	// こちらが3つの値のとき呼び出されていれば機能しないはず
	return x < y ? x : y;
}

//関数 3つの値から最小値を返却する関数
//仮引数 整数 x y z 整数であらば制限はない
//返却値 比較して一番小さい値が代入されている変数 min

int min(int x,int y,int z)
{
	// 最小値を定義しての処理を行う
	//こちらが 2つの値のとき呼び出されるのなら
	// 変数zを識別できずエラーが発生するはず
	int min = x;

	// minよりyの方が小さいとき
	if(y < min) {

		//min を y に更新する
		min = y;
	}
	// minよりzの方が小さいとき
	if(z < min) {

		//min を z に更新する
		min = z;
	}
	// 最小値の返却を行う
	return min;
}
