/*
演習5-4 演習 5－3を変更して 配列の前後で数字が重複しないようにする

作成日 2017年5月7日

作成者 平澤敬介
*/

#include<iostream>
//ランダム関数を使うためののライブラリ
#include<cstdlib>

//	現在時刻を定義しているライブラリ
#include<ctime>

using namespace std;

int main() {

	int nRandom[20]; // 要素数を20で定義 本当に前後で重複しないか要素数を増やして確認する

	// 乱数の種を現在時刻をもとに生成する
	srand(time(NULL));

	// 要素数分 乱数の生成と表示を行うためループ処理を行う
	for (int i = 0; i < 20; i++) {

		// 乱数を 1から10の間で生成し配列に格納する部分
		// この時点では重複している
		nRandom[i] = 1 + rand() % 10;

		//前後で重複している場合 do文でループに入る
		// 終了条件は 1つ前の値と異なること
		do {
			//　whileの条件を満たすまで乱数をdo文の中で新たに生成する
			nRandom[i] = 1 + rand() % 10;

			// ループの終了条件 i から 1つ前の配列の値と同じ場合振出しに戻る
		} while (nRandom[i] == nRandom[i - 1]);

		// do文を抜けたのなら確実に1つ前と重複していないことになる
		cout << "nRandom[" << i << "] = " << nRandom[i] << "\n";
	}
	return 0;
}
