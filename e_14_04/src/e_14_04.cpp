/*
演習14-4 簡易的な行列クラス Matrix を作成せよ 自分で設計すること

作成日 2017年5月12日

作成者 平澤敬介
*/

#include<iostream>
#include<iomanip>
#include"class.h"
#include<cstdlib>
#include<ctime>

using namespace std;

int main()
{

	int len1, len2;					//配列の行と列を決定する変数を定義

	//配列の行をキーボード入力で決定
	cout << "行 : ";

	//配列の要素のため正の整数のみ、受けつけます
	cin >> len1;

	//配列の列をキーボード入力で決定
	cout << "列 : ";

	//配列の要素のため正の整数のみ、受けつけます
	cin >> len2;

	Matrix tmp(len1,len2);			//クラスで	9×9の配列を作成します

	//宣言 クラス内のコンストラクタを使います
	cout << "コンストラクタ\n";

	//行分を操作するため、ループします
	for(int i=1; i <= len1; i++) {

		//列分を操作するため、ループします
		for(int j=1; j <= len2; j++) {

			tmp[i][j] = i * j;		//九九の値を各要素に代入します

			//クラスで作成した配列の値を表示します
			 cout << "  tmp[" << i << "][" << j << "] = "<< setw(3) << tmp[i][j] << " ";
		}
		cout << "\n";
	}

	Matrix copy = tmp;				//コピーコンストラクタを使います

	//宣言 クラス内のコピーコンストラクタを使います
	cout << "コピーコンストラクタ\n";

	//行分を操作するため、ループします
	for(int i=1; i <= len1; i++) {

		//列分を操作するため、ループします
		for(int j=1; j <= len2; j++) {

			//クラスで定義しているコピーコンストラクタの動作を確認します
			 cout << " copy[" << i << "][" << j << "] = "<< setw(3) << copy[i][j] << " ";
		}
		cout << "\n";
	}

	//演算子関数 + の動作を確認します
	cout << "演算子関数 + \n";

	Matrix plus = tmp + copy;			//演算子関数でクラス同士の配列を加算します

	//行分を操作するため、ループします
	for(int i=1; i <= len1; i++) {

		//列分を操作するため、ループします
		for(int j=1; j <= len2; j++) {

			//クラスで定義している演算子関数 + の動作を確認します
			 cout << " plus[" << i << "][" << j << "] = "<< setw(3) << plus[i][j] << " ";
		}
		cout << "\n";
	}

	//演算子関数 - の動作を確認します
	cout << "演算子関数 - \n";

	Matrix minus = plus - copy - tmp;	//演算子関数でクラス同士の配列を減算します

	//行分を操作するため、ループします
	for(int i=1; i <= len1; i++) {

		//列分を操作するため、ループします
		for(int j=1; j <= len2; j++) {

			//クラスで定義している演算子関数 - の動作を確認します
			 cout << "minus[" << i << "][" << j << "] = "<< setw(3) << minus[i][j] << " ";
		}
		cout << "\n";
	}

	//演算子関数 * の動作を確認します
	cout << "演算子関数 * \n";

	Matrix produ = plus * 3;			//演算子関数でmain内で与える変数を積算します

	//行分を操作するため、ループします
	for(int i=1; i <= len1; i++) {

		//列分を操作するため、ループします
		for(int j=1; j <= len2; j++) {

			//クラスで定義している演算子関数 * の動作を確認します
			 cout << "produ[" << i << "][" << j << "] = "<< setw(3) << produ[i][j] << " ";
		}
		cout << "\n";
	}

	//演算子関数 = の動作を確認します
	cout << "演算子関数 = \n";

	Matrix sub = produ;					//演算子関数で クラス配列の値を代入します

	//行分を操作するため、ループします
	for(int i=1; i <= len1; i++) {

		//列分を操作するため、ループします
		for(int j=1; j <= len2; j++) {

			//クラスで定義している演算子関数 = の動作を確認します
			 cout << "  sub[" << i << "][" << j << "] = "<< setw(3) << sub[i][j] << " ";
		}
		cout << "\n";
	}

	return 0;
}
