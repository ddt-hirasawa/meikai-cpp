/*
 演習7-9 要素数nの配列aのa[idx]にxを挿入する関数を作成する

 作成日 2017年5月8日

 作成者 平澤敬介
 */

#include<iostream>

using namespace std;

// 仮引数として 配列 要素数 先頭要素の番号 挿入する数字を与える
void aryins(int a[], int n, int idx, int x);

int main() {
	int Int[10] = { 1, 3, 4, 7, 9, 11, 13, 15, 17, 19 }; // 関数に使う配列を定義する 指定した配列の値のみを変更する

	// 削除前の配列を表示するために要素数分ループ処理を行う
	for (int i = 0; i < 10; i++) {

		// 表示するために,｛ } の表記を行います
		if (i == 0) {

			//必ず必要ではありません
			cout << "{ ";
		}

		//数値の表示を行います
		cout << Int[i];

		// 値を区切るたために　,　の表記を行います
		if (i < 10) {

			//必ず必要ではありません
			cout << " ,";
		}
	}
	//必ず必要ではありません
	cout << " }\n";

	// 関数呼び出し部分 3番目の要素を 99に変更する 3番目の要素は押し出されるため
	// ループ処理が必要になる
	aryins(Int, 10, 3, 99);

	// 削除後の配列を表示するために要素数分ループ処理を行う
	for (int i = 0; i < 10; i++) {

		// 表示するために,｛ } の表記を行います
		if (i == 0) {

			//必ず必要ではありません
			cout << "{ ";
		}

		//数値の表示を行います
		cout << Int[i];

		// 値を区切るたために　,　の表記を行います
		if (i < 10) {

			//必ず必要ではありません
			cout << " ,";
		}
	}
	//必ず必要ではありません
	cout << " }\n";

	return 0;
}

//関数  要素数nの配列aのa[idx]にxを挿入する関数
//仮引数 配列の先頭要素のポインタ a[] 要素数 n 削除する配列の番号 idx 削除する個数 k
//返却値 無し

void aryins(int a[], int n, int idx, int x) {

	//配列の最後尾から先頭要素までループ処理を行う
	//このループのうちに挿入を行ってしまうと
	// 値が更新されてしまうためループ後に挿入を行う
	for (int i = n; i > idx; i--) {

		// 今、指しているオブジェクトを1つ前のオブジェクトにする
		*(a + i) = *(a + i - 1);
	}
	// 配列のidx番目のオブジェクトに ｘを代入する
	*(a + idx) = x;
}
