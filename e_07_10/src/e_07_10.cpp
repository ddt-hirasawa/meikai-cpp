/*
 演習7-10 2次元配列 各行の最大値を要素数nの1次元配列に格納する関数を作成する

 作成日 2017年5月8日

 作成者 平澤敬介
 */

#include<iostream>

using namespace std;

// 関数の宣言 ２次元配列 と 最大値を格納する1次元配列、要素数 を与える
void maxline(int a[][5], int m[], int n);

int main() {
	int n;			// 要素数をキーボード入力するためにdo文の外で変数を定義する

	//要素数が1以上となるようにdo while文で 入力をやり直させる
	do {

		//配列の行をキーボードからの入力で決める
		cout << "配列要素数(1以上) :";

		//キーボードからの値を 要素数とする
		cin >> n;

		//ただし、1以上でなければならない
	} while (n < 0);

	int Int[n][5]; 	// 取り込んだ要素数で n行 5列の配列を定義する 要素は代入するため初期化は必要ない

	// 行を走査するためにループ処理を行う
	for (int i = 0; i < n; i++) {

		// 列を走査するためにループ処理を行う
		for (int j = 0; j < 5; j++) {

			// 各要素に値を代入していく部分 整数であれば特にルールはない
			cout << "Int[" << i << "][" << j << "] :";

			//配列の要素をキーボードからの値で決定する
			cin >> Int[i][j];
		}
	}

	// 配列の要素をすべて表示させる部分
	// 行を走査するためにループ処理を行う
	for (int i = 0; i < n; i++) {

		// 列を走査するためにループ処理を行う
		for (int j = 0; j < 5; j++) {

			// 表示するために,｛ } の表記を行います
			if (j == 0) {

				//必ず必要ではありません
				cout << "{ ";
			}

			//数値の表示を行います
			cout << Int[i][j] << ", ";

			// 表示するために,｛ } の表記を行います
			if (j >= 4) {

				//必ず必要ではありません
				cout << "}";
			}
		}
		//改行して、次の行の表示を行います
		cout << "\n";
	}

	//宣言 各行の配列から最大値を出していきます
	cout << "各行の最大値を格納\n";

	int max[n];	// 各行の最大値を格納する配列を定義する 関数によって代入が行われるため
				//　初期化は必要ない

	// 関数呼び出し部分 2次元配列 Int 1次元配列 max 要素数 n を与え 1次元配列に値の代入を行う
	maxline(Int, max, n);

	// 配列の要素をすべて表示させる部分
	// 最大値が格納されている配列にループ処理を行い表示を行う
	for (int i = 0; i < n; i++) {

		// 表示するために,｛ } の表記を行います
		if(i == 0) {

			//必ず必要ではありません
			cout << "{ ";
		}

		//各行の最大値の表示を行います
		cout << max[i] << ", ";

		// 表示するために,｛ } の表記を行います
		if(i >= n - 1) {

			//必ず必要ではありません
			cout << "}";
		}
	}

	return 0;
}

//関数 2次元配列 各行の最大値を要素数nの1次元配列に格納する
//仮引数 行と列の先頭を指すポインタ a 最大値を格納する配列の先頭の要素を指すポインタ m 要素数 m
//返却値 無し

void maxline(int a[][5], int m[], int n) {

	// 行を走査するためにループ処理を行う
	for(int i = 0; i < n; i++) {

		int max = a[i][0];// 各行の最初の値を最大値と仮定して列のループ処理を行っていく

		// 列を走査するためにループ処理を行う
		for (int j = 0; j < 5; j++) {

			// if文により大きい値があれば更新していきループが終われば
			// max はその列で最大の値となっている
			if (max < a[i][j]) {

				//最大値を大きい値に更新する
				max = a[i][j];
			}
		}

		m[i] = max;		// 最大値を格納する配列に値を代入する
	}					//2次元配列の行と1次元配列の要素数が同じなため
}						// 行を走査するループの終わりで代入を行う

