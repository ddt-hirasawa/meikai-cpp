// 演習7-13 要素数nの配列bの要素を配列aにコピーする関数を作成する

#include<iostream>

using namespace std;

// 配列を2つ仮引数として与えているが コピー元の配列はconstを付けて値の変更が
// 起こらないようにする
void ary_cpy(int*,const int*,int);

int main()
{
	int a[10];		// コピー素の配列を定義 中身は代入して出力する
	int b[10] = {0}; //コピーされる配列すべての要素を 1 で初期化しておく

	// 要素数分代入を行うためループ処理を行う
	for(int i=0;i<10;i++){
		// 配列aに値を代入していく すべて0はダメ
		cout << "a[" << i << "] : "; cin >> a[i];
	}

	// コピー前の 両方の配列を並べて表示する 当然 a b で異なる値が表示される
	for(int i=0;i<10;i++) cout << "a[" << i << "] = " << a[i] << " b[" << i << "] = " << b[i] << "\n";

	// コピー関数の呼び出し部分
	ary_cpy(b,a,10);

	cout << "コピー後\n";

	// コピー後の 両方の配列を並べて表示する コピー関数を通過しているので a b で同じ値にナル
	for(int i=0;i<10;i++) cout << "a[" << i << "] = " << a[i] << " b[" << i << "] = " << b[i] << "\n";

	return 0;
}

void ary_cpy(int* a,const int* b,int n)
{
	// ポインタを走査し、先頭要素から最後の要素まで指していき
	// 値を代入していく
	for(int i=0;i < n;i++) *a++ = *b++;
}
