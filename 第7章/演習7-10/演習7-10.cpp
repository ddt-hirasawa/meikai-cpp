//演習7-10 2次元配列 各行の最大値を要素数nの1次元配列に格納する関数を作成する

#include<iostream>

using namespace std;

// 関数の宣言 ２次元配列 と 最大値を格納する1次元配列、要素数 を与える
void maxline(int a[][5],int m[],int n);

int main()
{
	int n;// 要素数をキーボード入力するためにdo文の外で変数を定義する
	do{
	// 要素数が1以上となるようにdo while文で 入力をやり直させる
	cout << "配列要素数(1以上) :"; cin >> n;
	}while(n < 0);

	int a[n][5]; // 取り込んだ要素数で n行 5列の配列を定義する 要素は代入するため初期化は必要ない

	// 行を走査するためにループ処理を行う
	for(int i=0;i < n;i++){
		// 列を走査するためにループ処理を行う
		for(int j=0;j < 5;j++){
			// 各要素に値を代入していく部分 整数であれば特にルールはない
			cout << "a[" << i << "][" << j <<  "] :"; cin >> a[i][j];
		}
	}

	// 配列の要素をすべて表示させる部分
	// 行を走査するためにループ処理を行う
	for(int i=0;i < n;i++){
		// 列を走査するためにループ処理を行う
		for(int j=0;j < 5;j++){
			if(j == 0)
			cout << "{ ";
		cout << a[i][j] << ", ";
			if(j==4)
				cout << "}";
		}
		cout << "\n";
	}

	cout << "各行の最大値を格納\n";

	int m[n];// 各行の最大値を格納する配列を定義する 関数によって代入が行われるため
		//　初期化は必要ない

	// 関数呼び出し部分 2次元配列 a 1次元配列 m 要素数 n を与え 1次元配列に値の代入を行う
	maxline(a,m,n);

	// 配列の要素をすべて表示させる部分
	// 最大値が格納されている配列にループ処理を行い表示を行う
	for(int i=0;i < n;i++){
		if(i == 0)
		cout << "{ ";
		if(i >= 0)
			cout << m[i] << ", ";
		if(i == n-1)
			cout << "}";
	}

	return 0;
}

//2次元配列 各行の最大値を要素数nの1次元配列に格納する関数
void maxline(int a[][5],int m[],int n)
{
	// 行を走査するためにループ処理を行う
	for(int i=0;i < n;i++){
		// 各行の最初の値を最大値と仮定して列のループ処理を行っていく
		int max = a[i][0];
		// 列を走査するためにループ処理を行う
		for(int j=0;j < 5;j++){
			// if文により大きい値があれば更新していきループが終われば
			// max はその列で最大の値となっている
			if(max < a[i][j]) max = a[i][j];
		}
		// 最大値を格納する配列に値を代入する
		//　2次元配列の行と1次元配列の要素数が同じなため
		// 行を走査するループの終わりで代入を行う
		m[i] = max;
	}
}
