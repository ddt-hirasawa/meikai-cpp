// 演習7-11 int型2次元配列の構成要素を縦横にそろえて表示する 各値の左端をそろえる

#include<iostream>

// 桁をそろえるためのsetw演算子を使うためのライブラリ
#include<iomanip>
// ランダム関数を定義しているライブラリ
#include<cstdlib>
// 現在時刻を定義しているライブラリ
#include<ctime>

using namespace std;

// 配列の要素を表示する関数の宣言
void print2d(int a[][5],int n);

int main()
{
	// 現在時刻でもって乱数の種を生成する
	srand(time(NULL));

	int n; //構成要素を1以上で得るためにdo文の外で変数を定義する
	do{
		// 1以上になるまでループを繰り返し 2次元配列を作る
	cout << "配列要素数(1以上) :"; cin >> n;
	}while(n < 0);

	int a[n][5];// 構成要素が決まったならば その数でn行5列の配列を作成する

	//各要素を-9999～9999までの乱数を作り格納する
	//これで様々な値で 数値の端をあっているかどうか確認する
	for(int i=0;i < n;i++){
		for(int j=0;j < 5;j++){
			a[i][j] = rand() % 10000;
			if(rand() % 2 == 0){
				a[i][j] *= -1;
			}else{
				a[i][j] *= 1;
			}
		}
	}

	// 配列の構成要素をそろえて表示する関数を呼び出す
	// すべて関数内部での処理になる
	print2d(a,3);

	return 0;
}

// 配列の要素を表示する関数
void print2d(int a[][5],int n)
{
	// 行の数分走査するためにループ処理を行う
	for(int i=0;i < n;i++){
		// 列の数分走査するためにループ処理を行う
		for(int j=0;j < 5;j++){

			// 変数tmpに絶対値にした要素を一時的に格納する
			int tmp = a[i][j];
			if(tmp < 0) tmp *= -1;
			// 構成要素を表示する iが0番目ならば左端に数値が表示されるが
			// 構成要素の桁や符号によって表示したときジグザグになってしまう
			cout << a[i][j];

			// そのため、桁の数をカウントで求めてその数に応じて空白文字を
			// 表示することで左端を合わせます
			int n = 0;
			while(tmp < 0){
				// 絶対値となった値を10で割りカウントし続ける
				tmp /= 10;
				n++;
			}
			//カウントした値で setw演算子を使い応じた幅で空白文字を表示させる
			cout << setw(6-n) << " ";
			if(a[i][j] > 0)
			// 最後に ―符号に対応するため正の値なら空白文字を1文字分表示させる
				cout << " ";
		}
		cout << "\n";
	}
}

