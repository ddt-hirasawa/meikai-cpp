// 演習 3-20 左上直角三角形 右下直角三角形 右上直角三角形 をそれぞれ表示する

#include<iostream>

using namespace std;

int main()
{
	int n,i,j,k,l;	// 三角形を作る変数を定義

	// 左下直角三角形はテキストで書かれているため省略されている
	cout << "左上直角の三角形を表示\n";
	// ここで行数と列数が決まる 実質二等辺３角形
	cout << "段数 :"; cin >> n;

	// n の段数分行を操作するためループする
	for(i=1;i<=n;i++){

		// 左上に直角があるため、＊の表示を行ごとに１つずつ
			// 減らしていくだけで良い。
		for(j=n;j>=i;j--) cout << "*";

		// 列の操作を終えたら次の行に行く
		cout << "\n";
	}
	// 右下に直角があるため、空白文字を表示させ直角の位置を右に移動させる必要がある
	cout << "右下直角の三角形を表示\n";

	// n の段数分行を操作するためループする
	for(i=1;i<=n;i++){

		// 行数に比例して空白文字を入れていく,最後の行で空白を表示しないように
		// １文字ずつ表示を減らしていく
		for(l=1;l<=n-i;l++) cout << " ";

		//行数に比例して表示を増やしていく 最後の行で n 分表示する
		for(j=1;j<=i;j++) cout << "*";

		// 列の操作を終えたら次の行に行く
		cout << "\n";
	}

	// 右上に直角があるため、空白文字を表示させ直角の位置を右に移動させる必要がある
	cout << "右上直角の三角形を表示\n";

	// n の段数分行を操作するためループする
	for(i=1;i<=n;i++){

		//　空白文字を行数に比例して表示させる。最初の段では表示しない
		for(k=1;k<i;k++) cout << " ";

		//最初の段で n 分表示し 後は表示を １つずつ減らしていく
		for(j=n;j>=i;j--) cout << "*";

		// 列の操作を終えたら次の行に行く
		cout << "\n";
	}

	return 0;
}
