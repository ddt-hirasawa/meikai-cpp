// 演習5-8 ランダムに配列の要素を代入し表示する その後、配列をランダムにシャッフルし表示を行う

#include<iostream>

//ランダム関数を使うためののライブラリ
#include<cstdlib>

//	現在時刻を定義しているライブラリ
#include<ctime>

using namespace std;

int main()
{
	int n=0; // 順位付け用 の変数を定義する
	int a[20]; // シャッフル前 //配列を乱数で埋め尽くす
	int b[20]; // シャッフル後 //シャッフル後の値を格納する
	int c[20]; // n でカウントした値を格納していく配列

	//現在時刻で連数の種を生成していく
	srand(time(NULL));


	// 要素数分 配列aに乱数を格納 配列cには順番付け用の乱数を格納する そのためのループ処理
	for(int i=0;i < 20;i++){
		a[i] = rand()%100;
		c[i] = rand();
	}

	// 配列cを比較し重複しない、0～19の乱数を生成するためのループ
	for(int i=0;i < 20;i++){

		// 配列ｃの比較を行うため要素数分ループを行う
		for(int j=0;j < 20;j++){
			if(c[i] < c[j]) n++;
		}
		//配列bに0から19の乱数が格納され配列aのシャッフルに使う
		b[i] = n;
		n = 0;
	}

	//シャッフル後の値を配列cに格納する 配列bに格納されている値で代入を行っていく
	for(int i=0;i < 20;i++) c[b[i]] = a[i];

	// シャッフル前と後で表示を行うために要素数分表示を行うためのループ
	for(int i=0;i < 20;i++)
		cout << "シャッフル前a[" << i << "] = " << a[i]
			 << " シャッフル後a[" << i << "] = " << c[i] << "\n";

	return 0;
}
