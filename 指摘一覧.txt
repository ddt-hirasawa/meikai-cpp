--- C++指摘一覧 ---
1-8
  ・代入する値が整数です。実数を代入して確認してください。

1-13
  ・24行目、出力全てを1行で書いていて見辛いです。
    改行も含まれているので、改行で出力行を分け、見やすくしてください。

1-14
  ・変数が何を指しているか分かり辛いです。
    1章全てにいえる事ですが、練習も兼ねて1-14は全ての変数名を意味のある名前に修正してください。
    例:x → valueX や inputNumber 等


********************************************************  
2章以降、修正がある場合に限り、変数名も修正してください。
********************************************************

2-1
  ・if文の{}を省略しています(可能であり動作もします)が、バグの元のなるため必ず{}記載するようにしてください。
    1行にまとめている場合でも同様です。以降同様に修正をお願いします。

2-2
  ・2-1と同じくif文の{}を記載してください。

2-3
  ・if文が非常に読みづらくなっています。C言語の歴史的に行数を少なくするという事があるかもしれませんが、
    現在のコンピューターでは1行2行増えた所でどうという事はありません。
    改行を行い、見やすくしてください。(順番に見ているため後半が問題無い場合はすみません)
      ※1:プログラム作成時のコツは、まず { } を作成してから中身を書くと良いです。
      ※2:条件式の後に改行を入れてから{ を記載するパターンもありますが、下記例のパターンをお勧めします
  例
  if (numberA > numberB){
      //Aの方が大きい処理
  }else if (numberA < numberB){
      //Bの方が大きい処理
  }else{
      //どちらも等しい処理
  }

2-4、2-5
  ・2-3と同じく見やすく修正してください

2-6
  ・2-1、2-3と同様の修正をお願いします。

2-7
  ・2-1、2-3と同様の修正をお願いします。
  ・変数:max を用いた形式に修正してください。
  ・条件式には、三項演算子(条件演算子の一つ)を使用してください。記号は"?"になります

2-8
  ・2-7の修正と同じ修正をお願いします。変数はmaxではなく、diff(差)として作成してください。
  
2-9
  ・似たような処理を2回実行しているような形になっています。
    2-8と同様の修正を加えた上で、if-elseは1つで作成し直してください。
    (パチっと当てはまるはずです)

2-10
  ・2-1,2-3と同様の修正をお願いします。
  ・細かいですが、14行目を2行に分けた方が読みやすくなります。修正してください。
  ・ifの条件文では、小さい値を左側、大きい値を右側にするよう統一すると読みやすくなり、バグも減らすことが出来ます。
    例外はありますが、基本これで問題無いので、例を参考にして修正してください。(条件演算子が重要)
    例
    if (numberB <= min) {
      min = numberB ;
    }else if (numberC <= min) {
      min = numberC ;
    }

2-11
  ・変数名がおかしいです。aveは平均を表すように見えるので、中央値(medium)を使用してください。
  ・バグがあります、A = 1, B = 2, C = 1 で実行した場合、想定は1ですが、2が返ってきます。確認してください。
  ※ヒントとして、無理やり条件に当てはめたり、例外パターンを用意したりするとバグが発生しやすくなります。
    シンプルに、上から順番に流れたパターンで考えてみてください。最初にAを仮の値とするのはOKです。

2-12
  ・29行目、コメント切れ？不備があるため修正してください。

2-16
  ・乱数を使用するのではなく、整数値を入力して、入力された値に応じた月を返すようなプログラムを作成してください。
    その際、1～12以外の値が入力されたパターンも考慮してください。

2-18
  ・上部コメントについて：誤記ではないです。 if (a = 0) で問題を解いてください。(イコール1個)
    ヒントとして、if(a = 1)として実行して結果を確認してみてください。
    解答としてはコメントでどのような動作をするか記載してください。
    ※ただし、本来であれば、このような使い方は誤解を生みやすいため滅多に使用しません。(多分)
      柴田は経験が浅いため使用例が挙げれませんが、現場ではこのような手法を取っている可能性があります。
      テクニックの一つとして頭の片隅に置いておくとソースを読むのに役立ちます。


*******************************************************************************************
3章以降は共通の指摘は基本していません。修正に合わせ今までの共通的な指摘も反映してください。
*******************************************************************************************


3-1
  ・do whileのインデントが行われていません。ブロックごとにインデントを付けるようにしてください。
  例 (□は半角スペース、又はタブです。スペース量は半角4つ分が目安です。)
    do {
    □□//処理1
    □□//処理2
    □□//処理3...
    }while (条件式)

3-2
  ・do whileの条件式で a!=bを使用していますが、この条件は危険です。
    もし、偶数を出力等で+=2であった場合等に無限ループとなる恐れがあります。
    条件を以下や未満にして、無限ループの可能性を出来るだけ減らしたコードとしてください。
  ・最後の「不足分を出力する」処理を使わずに要件を満たすようなプログラムに修正してください。
    一つ目の修正で大体解決すると思います。

3-4
  ・15行目、コメントが嘘をついています。修正してください。

3-11
  ・19行目、誤記修正をお願いします。

3-14
  ・17行目あたり、不要と思われる条件文とコメント(//のみ)が存在しています。削除してください。

3-20
  ・for文の初期値が1から始まっていますが、0から始めるように修正してください。(nから始まるのはそのままでOKです)
  ※後の配列で出てると思いますが、配列添え字は0から始まるため、for文の初期値は0にしておきます。
    場合により0以外の値で開始しますが、基本は0から始めるよう心がけてください。
  ※これより前でも同じような物がありますが、例として3-20を挙げています。

3-24
  ・19行目のif文終了の閉じ括弧のインデントがズレています。
  ・コメントの位置は変数の宣言であれば右側に、処理であれば処理の上に書くように統一してください。

3-25
  ・28行目 goto文は｢絶対に｣使用しないでください。今回のようにシンプルであればまだいいですが、
    プログラムが大きくなった場合、どうしようもなくなってしまい｢とても危険｣です。
    goto文を使用しない形に書き換えてください。
    なお、while文の条件は評価値がtrueかfalseかで判断します。
  ※プログラムは上から下に全て流れ切るのが良いプログラムになります。
    うまく流せるように考えてプログラミングしてください。
  ※絶対にと記載しましたが、現場によっては使用する場合もあるかもしれません。
    その場合明確なルールがあるはずですのでそれに従ってください。無い場合は使用しないのが正しいです。

3-26
  ・インデントが不適切なので非常に読みづらいです。正しいインデントを付けてください。
  ※WindowsでEclipseを使用してる場合、Ctrl+Shift+Fを押すといい感じに揃えてくれたりします。
    意図しないフォーマットになる場合もあるので多用は注意です。


4-2
  ・式及び出力結果は正しいです。よく考えてあり良いです。ただ、プログラムが長くなりすぎています。
    教本記載の"操作子"を使用した単純なプログラムを[4-2-2]として新規作成してください。
    宣言部等を除いたロジック部が10行未満となるはずです。


4-4
  ・考察がNGです。文字列リテラルは8バイト使用しません。その他も同じです。
    重要ですので、"バイト(Byte)"と"ビット(bit)"の違いを再確認してください。


4-5
  ・float型とdouble型の出力結果が同じになる事はありません。(桁数が少なければ同じにはなります。)
    setprecision演算子を使用した形に修正し、再確認してください。

4-13
  ・作成されていないようです。作成してください。(p165)










