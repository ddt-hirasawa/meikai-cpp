/*
演習7-13 要素数nの配列bの要素を配列aにコピーする関数を作成する

作成日 2017年5月8日

作成者 平澤敬介
*/

#include<iostream>

using namespace std;

// 配列を2つ仮引数として与えているが コピー元の配列はconstを付けて値の変更が
// 起こらないようにする
void ary_cpy(int*,const int*,int);

int main()
{
	int a[10];			// コピー素の配列を定義 中身は代入して出力する
	int b[10] = {0}; 	//コピーされる配列すべての要素を 1 で初期化しておく

	// 要素数分代入を行うためループ処理を行う
	for(int i=0; i < 10; i++) {

		// 配列aに値を代入していく すべて0はダメ
		cout << "a[" << i << "] : ";

		//コピー元の配列を作ります「
		cin >> a[i];
	}

	// コピー前の 両方の配列を並べて表示する 当然 a b で異なる値が表示される
	for(int i=0; i < 10; i++) {

		// コピー前の配列を両方並べて表示します
		cout << "a[" << i << "] = " << a[i] << " b[" << i << "] = " << b[i] << "\n";
	}

	// コピー関数の呼び出し部分
	ary_cpy(b,a,10);

	// 宣言 コピー完了
	cout << "コピー後\n";

	// コピー後の 両方の配列を並べて表示する コピー関数を通過しているので a b で同じ値にナル
	for(int i=0; i < 10; i++) {

		// コピー後の配列を両方並べて表示します
		cout << "a[" << i << "] = " << a[i] << " b[" << i << "] = " << b[i] << "\n";
	}

	return 0;
}

//関数 ポインタを使って配列のコピーを行う
//仮引数 それぞれコピー元とコピーする配列の先頭を指すポインタ a b 共通の要素数 n
//返却値 無し

void ary_cpy(int* a,const int* b,int n)
{
	// ポインタを走査し、先頭要素から最後の要素まで指していき
	// 値を代入していく
	for(int i=0; i < n; i++) {

		//先頭のオブジェクトを順に代入していく
		*a++ = *b++;
	}
}
