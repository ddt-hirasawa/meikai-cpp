/*
演習9-2 ユークリッドの互除法を使って最大公約数を返却する関数の製作

作成日 2017年5月9日

作成者 平澤敬介
*/

#include<iostream>

using namespace std;

// 再帰的アルゴリズムを使ったユークリッドの互除法の関数
int gcd(int,int);

int main()
{
	int x = 100;			//ユークリッドの互除法で使う 値を定義する
	int y = 38;				//最大公約数のため 2 が返却されるはず

	// x y と最大公約数を表示する。正常ならば 2 が返却されて表示される
	cout << "  x : " << x << "\n"
		<< "  y : "<< y << "\n";

	cout << "最大公約数 : " << gcd(x,y);

	return 0;
}

//関数 ユークリッドの互除法を使って最大公約数を返却する
//仮引数 2つの整数値 この2つの値の最大公約数を探します
//返却値 2つの整数の最大公約数

int gcd(int x,int y)
{
	// ユークリッドの互除法のアルゴリズム
	//代入された x%y で余りが出るようならば
	if(x%y != 0) {

		//再度 関数を呼び出し 代入された x % y で
		return gcd(y,x%y);

	//余りが出ないようならば y を返却する
	} else if(x%y == 0) {

		// 実際には x%y == 0 の条件を満たした 値が 返却される
		return y;

	// このロジックだと、何も返却できないケースが存在すると判断されるので else を設けます
	} else {

		//警告を消すために記述 実際にはここまで処理は来ない
		return 0;
	}
}
