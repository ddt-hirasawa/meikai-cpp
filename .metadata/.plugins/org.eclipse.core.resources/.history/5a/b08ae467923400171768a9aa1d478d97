/*
演習9-9 演習9－6で内部結合をもつ識別子を、名前なしの名前空間に属するように書き換える

作成日 2017年5月9日

作成者 平澤敬介
*/

#include<iostream>

#include "math.h"

using namespace std;


int max_no = 999;		// 課題での変更点 0 ～ 999 までの値を当てなければならない

int main()
{
	//乱数を現在時刻を使って発生させます
	initialize();

	//宣言 数当てゲームを行います
	cout << "数当てゲーム開始 !\n";

	do {
		int answer = get_no();		// 変更点 int型で値を返却するように変更
		int hantei;					//入力した答えで判定をします
		int cnt = 0;				//入力回数をカウントします。10回以上で強制終了


		do {

			hantei = judge(input());	//0 ～  4 の値を受け取り,判定します

			//変更点 hantei が3以外返却したときのみ
			//回数を加算する。0～999以外のときは認めない
			if (hantei != 3) {

				//hantei = 3 は範囲外の数字が入力されたときです
				cnt++;
			}

			//入力した値は比較して大きかったことがわかりました
			if (hantei == 1) {

				//ヒント 入力する値はもっと小さい値を入力しましょう
				cout << "もっと小さい\n";

			//入力した値は比較して小さかったことがわかりました
			} else if (hantei == 2) {

				//ヒント 入力する値はもっと大きい値を入力しましょう
				cout << "もっと大きい\n";

			//変更点 hantei=3 は0～999以外が入力されたときのみ返却される
			// 入出力部分で項目を追加している
			} else if (hantei == 3) {

				//上限値を表示して、確認します
				cout << "上限は " << max_no << "です。回数に含みません。\n";
			}

		//正解か、10回失敗すれば抜けれます
		} while (hantei != 0 && cnt < 10);

		//正解です
		if(hantei == 0) {

			//正解までの回数を表示します
			cout << cnt << "回で 正解です\n";
		//変更点
		//if文で条件を付けないと正解と失敗が両方表示されてしまう
		} else {
			//悔しいので答えを表示します
			cout << "失敗です。答えは " << answer << "です。\n";		//
		}

		//続けるかもしれないのでカウンタを0に戻します
		cnt = 0;

	//続けますか？
	} while (confirm_retry());

	return 0;
}
